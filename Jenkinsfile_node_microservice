pipeline {
    agent any
    triggers {
        pollSCM('*/1 * * * *')
    }
    stages { 
        stage('build') {
            steps {
                echo "Building node app"
            }
        }
        stage('deploy-dev') {
            steps {
                script{
                    deploy("dev")
                }
            }
        }
        stage('test-dev') {
            steps {
                script{
                    test("dev")
                }
            }
        }
        stage('deploy-int') {
            steps {
                script{
                    deploy("int")
                }
            }
        }
        stage('test-int') {
            steps {
                script{
                    test("int")
                }
            }
        }
        stage('deploy-prd') {
            steps {
                script{
                    deploy("prd")
                }
            }
        }
        stage('test-prd') {
            steps {
                script{
                    test("prd")
                }
            }
        }
    }
}   


    def deploy(String environment){
        echo "Deployment to ${environment} triggered.."
        build job: "ui-tests", parameters: [string(name: "ENVIRONMENT", value: "${environment}")]}

    def test(String env){
        echo "Test node ${env}...}"
        sh "docker run --network=host -d -t --name api_tests_executor_${env} api_tests_executor:latest"
        sh "docker exec api_tests_executor_${env} cucumber --tags=@${env} --format html --out test-output/report.html"
        sh "docker cp api_tests_executor_${env}:/usr/src/api-tests/test-output/report.html report_${env}.html"
        sh "docker rm -f api_tests_executor_${env}"
    }